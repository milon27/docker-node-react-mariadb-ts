version: '3.4'
services:
  nginx:
    container_name: nginx
    image: nginx:stable-alpine
    # restart: always
    depends_on:
      - db
      - client_build
    ports:
      - 80:80 #http
      - 443:443 #https
    volumes:
      - ./_nginx/config/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./_nginx/config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./_tmp_volume/client:/usr/share/nginx/html # client application
      - ./_tmp_volume/dhparam:/etc/nginx/dhparam
      - ./_tmp_volume/certbot/conf/:/etc/nginx/ssl/
      - ./_tmp_volume/certbot/data:/usr/share/nginx/html/letsencrypt

  client_build:
    build:
      context: ./client
    image: milon27/vite-react
    volumes:
      - ./_tmp_volume/client:/app/dist
    environment:
      - VITE_APP_API=https://api.m27lab.ml
      - VITE_APP_NAME=CICD-SSL-G-ACTION

  server:
    container_name: server
    build:
      context: ./server
      target: production
    image: milon27/node-mysql
    restart: always
    depends_on:
      - db
    environment:
      - PORT=2727
      - DB_HOST=db
      - DB_USER=milon27
      - DB_PASS=myPassWord
      - DB_NAME=my_db
      - NODE_ENV=production_ssl_cicd

  db:
    container_name: mariadb
    image: mariadb:10.7
    restart: always
    environment:
      - MYSQL_USER=milon27
      - MYSQL_PASSWORD=myPassWord
      - MYSQL_ROOT_PASSWORD=myPassWord
      - MYSQL_DATABASE=my_db
    volumes:
      - mysql_vol:/var/lib/mysql
      - ./_db_restore:/docker-entrypoint-initdb.d

  # --force-renewal or --staging
  certbot:
    image: certbot/certbot:latest
    command: certonly --webroot --webroot-path=/usr/share/nginx/html/letsencrypt --force-renewal  --agree-tos --no-eff-email --email test27@g.com -d m27lab.ml
    volumes:
      - ./_tmp_volume/certbot/conf/:/etc/letsencrypt
      # - ./_tmp_volume/certbot/logs/:/var/log/letsencrypt #optional
      - ./_tmp_volume/certbot/data:/usr/share/nginx/html/letsencrypt

#volumes(root label)
volumes:
  mysql_vol: {}
